* Tasks
** TODO [#D] emacs what is outline mode?
** TODO [#B] Emacs check occur for searching
** TODO [#D] Emacs TRAMP as a replacement for FileZilla
** TODO [#C] Org mode using properties to organize collections of things (books)
- Note taken on [2018-02-10 Sat 00:45] \\
  https://orgmode.org/manual/Property-syntax.html#Property-syntax
** TODO [#D] emacs how to open file/buffer in read-only?
** TODO [#D] Vim solve snippets inheritance problem
** TODO [#D] emacs how to toggle buffer read-only
** TODO [#C] Add default priority to created tasks
** TODO [#B] Vim master switch capital case, snake case etc.
** TODO [#B] Emacs switch from capital case, snake case etc.
** TODO [#C] Check org-export-dispatch

** TODO [#B] Org mode Ghantt diagram
   - Note taken on [2018-02-08 Thu 23:56] \\
     http://taskjuggler.org
   https://orgmode.org/worg/org-tutorials/org-taskjuggler.html
** TODO [#B] Org mode how to click on link to open browser?
** TODO [#B] Org mode effort estimates
   SCHEDULED: <2018-02-07 Wed>
   - Note taken on [2018-02-07 Wed 13:05] \\
     org-set-effort

     Set effort ranges in
     org-global-properties

     https://orgmode.org/manual/Effort-estimates.html
** TODO [#D] Org mode Check Table of content generator
https://github.com/snosov1/toc-org
** Org mode org-sort
** TODO [#C] Org mode how to deal with repeating tasks?
** TODO [#B] Vim change TODO highlight to something less obstructive
** TODO [#B] Org mode clock tables
** CANCELED [#B] VIM remove fugitive from recent list
CLOSED: [2018-02-11 Sun] SCHEDULED: <2018-02-07 Wed>
- State "CANCELED"   from "TODO"       [2018-02-11 Sun 23:18] \\
  Not use recent list anymore.
   - Note taken on [2018-02-11 Sun 23:15] \\
     Switched to switch buffer rather then use another function.
** TODO [#C] Org mode what is column mode?
** DONE [#C] Org mode what are habits?
   CLOSED: [2018-02-06 Tue]
   - Note taken on [2018-02-06 Tue 20:07] \\
     Repeatable tasks.
** TODO [#C] Org mode identify org-stuck-projects
** DONE [#B] Is Emacs helm package works for me?
CLOSED: [2018-02-11 Sun] SCHEDULED: <2018-02-06 Tue>
- Note taken on [2018-02-11 Sun 23:01] \\
  Nope, probably only M-x mode.
- State "DONE"       from "IN-PROCESS" [2018-02-11 Sun 23:01]
** TODO [#C] Org mode what export options do I have?
** DONE [#C] org mode how to add statuses: WAITING, BLOCKED, STARTED?
   CLOSED: [2018-02-05 Mon] SCHEDULED: <2018-02-05 Mon>
   - Note taken on [2018-02-05 Mon 20:07] \\
   Faces for TODO keywords

** TODO [#B] Org mode how can I manage repeatable tasks?
   SCHEDULED: <2018-02-06 Tue>
   - Note taken on [2018-02-05 Mon 23:53] \\
     https://orgmode.org/manual/Repeated-tasks.html

** DONE [#B] Org mode how to add tasks fast?
CLOSED: [2018-02-11 Sun] SCHEDULED: <2018-02-06 Tue>
- State "DONE"       from "TODO"       [2018-02-11 Sun 23:05]
   - Note taken on [2018-02-11 Sun 23:05] \\
     org-refill org-capture and org-agenda
   - Note taken on [2018-02-08 Thu 23:46] \\
     refiling
     https://orgmode.org/manual/Refile-and-copy.html#Refile-and-copy
   - Note taken on [2018-02-06 Tue 00:15] \\
      What about capture, diary and journal?
     org-journal-*

** DONE [#D] Emacs make font bigger                                                    :@efficiency:
   CLOSED: [2018-02-04 Sun] SCHEDULED: <2018-02-03 Sat>
   - Note taken on [2018-02-07 Wed 20:06] \\
     C-x C--
     C-x C-+
** TODO [#B] Org mode how notes works                                                  :@efficiency:
** DONE [#B] Org mode org-reload
   SCHEDULED: <2018-02-05 Mon>
   - State "DONE"       from "TODO"       [2018-02-05 Mon 22:01]
** TODO [#C] Org mode org-goto                                                         :@efficiency:
** DONE Learn to use Emacs Dired mode                                                  :@efficiency:
   - State "DONE"       from "TODO"   [2018-02-07 Wed 20:10]
** TODO [#C] Learn Emacs sunrise commander                                             :@efficiency:
** TODO [#D] Org mode add encryption
** DONE [#B] Create org mode sort custom configuration                                 :@efficiency:
   CLOSED: [2018-02-04 Sun] SCHEDULED: <2018-02-04 Sun>

** DONE [#B] Check org-priority                                                        :@efficiency:
   CLOSED: [2018-02-03 Sat]
** DONE [#B] Check org-schedule                                                        :@efficiency:
   CLOSED: [2018-02-03 Sat]
** DONE [#B] Check org-deadline                                                        :@efficiency:
   CLOSED: [2018-02-03 Sat]
** DONE [#B] Emacs calendar                                                            :@efficiency:
   CLOSED: [2018-02-03 Sat]
** DONE [#C] Emacs recentf-dialog-mode                                                 :@efficiency:
   CLOSED: [2018-02-03 Sat]

** TODO [#D] Setup Gnus                                                                :@efficiency:
setup keys

** DONE [#A] What are 'org categories'?                                                :@efficiency:
CLOSED: [2018-02-11 Sun] SCHEDULED: <2018-02-07 Wed>
- State "DONE"       from "TODO"       [2018-02-11 Sun 23:06]
   - Note taken on [2018-02-11 Sun 23:06] \\
     File names by default, also configurable in properties.
** TODO [#B] Manage English new words in org mode                        :@efficiency:@love:@wealth:
** TODO [#C] Check org agenda set effort.                                              :@efficiency:
** TODO [#D] Org-mobile integration + android app.                                     :@efficiency:
** TODO [#C] Check org-agenda-write                                                    :@efficiency:
** TODO [#C] Org mode add sync with google cal                                         :@efficiency:
   - Note taken on [2018-02-08 Thu 23:59] \\
     https://www.npmjs.com/package/webdav-server

https://orgmode.org/worg/org-tutorials/org-google-sync.html
webdav server na heroku

** TODO [#B] Org mode agile / scrum / spring                                           :@efficiency:
** DONE [#A] Org mode setup proper agenda view                                         :@efficiency:
CLOSED: [2018-02-12 Mon] SCHEDULED: <2018-02-07 Wed>
- State "DONE"       from "TODO"       [2018-02-12 Mon 23:59]
** DONE [#A] Setup agenda view for all undone tasks                                    :@efficiency:
CLOSED: [2018-02-11 Sun] SCHEDULED: <2018-02-07 Wed>
- State "DONE"       from "TODO"       [2018-02-11 Sun 23:06]
** DONE Learn to use Emacs calendar                                                    :@efficiency:
   CLOSED: [2018-02-04 Sun]
** DONE [#C] Learn to work with org-agenda mode                                        :@efficiency:
   CLOSED: [2018-02-04 Sun] SCHEDULED: <2018-02-04 Sun>
** TODO [#D] Access org mode on mobile                                                 :@efficiency:

** TODO [#D] Git blame support
- Note taken on [2018-02-13 Tue 17:05] \\
  build in package vc-*

  git.el http://alexott.net/en/writings/emacs-vcs/EmacsGit.html

hacks:
http://snarfed.org/emacs-vc-git-tweaks

  magit:
  https://magit.vc/manual/
  https://stackoverflow.com/questions/15460550/git-blame-with-commit-details-in-emacs
** DONE Gitgutter
    CLOSED: [2018-02-06 Tue]
** DONE [#C] run commands async (what commands?)
CLOSED: [2018-02-12 Mon]
- State "DONE"       from ""           [2018-02-12 Mon 23:45]
** TODO [#D] JSON by syntax
** TODO [#B] folded markers available all the time
** DONE [#A] how to refresh buffer?
CLOSED: [2018-02-12 Mon]
- Note taken on [2018-02-12 Mon 23:47] \\
  <C-x r> or <C-r>
- State "DONE"       from ""           [2018-02-12 Mon 23:47]
** DONE [#B] search and replace in multiple files
CLOSED: [2018-02-11 Sun] SCHEDULED: <2018-02-06 Tue>
- State "DONE"       from "TODO"       [2018-02-11 Sun 23:14]
    - Note taken on [2018-02-11 Sun 23:08] \\
      rgrep + wgrep combo https://github.com/mhayashi1120/Emacs-wgrep
    - Note taken on [2018-02-11 Sun 23:04] \\
      projectile could be useful here - occur, grep
    - Note taken on [2018-02-06 Tue 21:28] \\
      Build in s&r by tags tags-query-replace.
** DONE [#A] search and replace in single file
    CLOSED: [2018-02-06 Tue] SCHEDULED: <2018-02-06 Tue>
    - State "DONE"       from "IN-PROCESS" [2018-02-06 Tue 21:58]
    - Note taken on [2018-02-06 Tue 21:40] \\
      M-% together with C-s (incremental search).
** DONE toggle dictionary fast
    CLOSED: [2018-02-06 Tue]
    - Note taken on [2018-02-06 Tue 20:16] \\
      dict-toggle
      M-$ - correct word
      C-, - next error
      Fly prog mode
** DONE [#B] indent region
CLOSED: [2018-02-12 Mon]
- State "DONE"       from ""           [2018-02-12 Mon 23:48]
- Note taken on [2018-02-12 Mon 23:48] \\
  Just with <tab>.
** DONE [#A] Window zoom
CLOSED: [2018-02-12 Mon]
- State "DONE"       from ""           [2018-02-12 Mon 23:49]
- Note taken on [2018-02-12 Mon 23:48] \\
  Toggle window zoom with <C-x |>.
** DONE [#A] go to line number
CLOSED: [2018-02-12 Mon]
- State "DONE"       from ""           [2018-02-12 Mon 23:50]
- Note taken on [2018-02-12 Mon 23:49] \\
  <M-gg> or <M-g><M-g>
** DONE [#A] easy tabs switch
CLOSED: [2018-02-12 Mon]
- State "DONE"       from ""           [2018-02-12 Mon 23:51]
- Note taken on [2018-02-12 Mon 23:50] \\
  With <cmd-left> and <cmd-right>.
** DONE [#A] easy window switch
CLOSED: [2018-02-12 Mon]
- State "DONE"       from ""           [2018-02-12 Mon 23:51]
- Note taken on [2018-02-12 Mon 23:51] \\
  Done with C-x <left>/<right>/<up>/<down>.
** DONE [#A] navigation recent files
    CLOSED: [2018-02-06 Tue]
    - Note taken on [2018-02-06 Tue 20:24] \\
      recentf-*
** TODO [#C] Emacs git support (magit)
** TODO [#C] Vim try easy motion

https://github.com/easymotion/vim-easymotion

** TODO [#C] Vim check vimtutor
** TODO [#C] Configure "stuck projects"
* English
** adjectives
** adverbs
** nouns
*** Brokerage - po≈õrednictwo
** verbs
* Emacs
** General
*** Many mail handlers: Wanderlust/Gnus/Rmail/BBDB
*** ModeLine
**** ** - modified since last save
**** -- - not modified since last save
**** %* - read-only but modified
**** %% - read-only not modified

** Edit
*** C-w - cut
*** C-y - paste
*** C-c C-c - tag search
*** C-x z - repeat last command
*** M-% - interactive replace
*** M-^ or C-j - join lines / delete indentation
*** M-w - copy region
*** M-<space> - delete spaces and tabs around the word
*** M-delete - delete symbol previous cursor
*** C-x C-q - toggle read-only mode
** Navigation
*** C-M-n - move to forward parentheses
*** C-M-p - move to previous parentheses
*** C-M-space - put mark at the end of parentheses
*** C-x r j - jump to register
*** C-x C-r - open recent file
*** C-x p - git previous change
*** C-x n - git next change
*** M-> - go to end of the buffer
*** M-< - go to beginning of the buffer
*** M-g M-g or M-g g - goto line number
*** C-x C-d - (helm) browser project folder
*** C-s C-s - search for most recent search again
**** M-p|n - go through kill ring
**** C-w - add another word to active search
**** M-e - edit searching phrase
*** C-x r b - jump to bookmark
*** C-x r m - set bookmark
*** C-x r l - list bookmarks
** Help
*** C-h f - show function help
*** C-h k - show shortcut help
*** C-h v - show variable help
*** C-h m - show major mode help
*** C-h b - display all key bindings
*** C-h t - show tutorial
** Help window
*** C-M-v - scroll help window
*** l - go back in help window
*** r - go forward in help window
** Info
*** C-h i - open documentation (Info)
*** C-h S - find function or variable in Info
** Spellcheck
*** C-, - go to next error
*** C-c $ - interactive error resolve
** Buffers
*** C-x <previous> - change to next buffer
*** C-x <left> - change to previous buffer
** Windows
*** C-x + - all windows the same size
*** C-x 0 - close this window
*** C-x 2 - split window horizontally
*** C-x 4 r <filename> - open file in read-only mode in other window
** Frames
*** C-x 5 0 - close this frame
*** C-x 5 f - find file in other frame
*** C-x 5 2 - open empty frame and clone current buffer
*** C-x 5 r <filename> - open file in read-only mode in new frame
** Files
*** C-x C-f C-f - create file in 'find file mode'
** VCS / git
*** vc-annotate - git blame (https://stackoverflow.com/questions/15460550/git-blame-with-commit-details-in-emacs)
*** C-x v = - ediff-revision
* Org mode
** Features
*** comments - prevent heading and sub headings from being exported
*** links to files, web
*** footnotes
*** inline images
*** task effort estimation
*** clock tables
*** countdown timer
*** relative timer
*** refile - move heading to different place
*** note captures - templates
** Timestamp
*** S-left-right - timestamp day next/previous
*** S-up/down - timestamp next/previous
*** > / < - scroll calendar forward / backward 1 month
*** M-v / C-v - scroll calendar forward / backward 3 months
*** M-S-down / up - scroll calendar forward / backward 1 year
** Tags
*** org-change-tag-in-region
** Edit
*** C-return - insert heading (not break current heading)
*** M-return - insert heading, item or row
*** C-c C-l - insert link
*** C-c C-a - insert attachment
*** M-left/right - demote/promote heading
*** C-c C-d - set deadline
*** C-c C-s - set scheduled
*** C-c C-z - add time stamped note to LOGBOOK drawer
*** org-change-tag-in-region
*** M-S-<left>/<right> - demote/promote entire subtree
*** M-h - mark heading
*** C-c c - capture note
*** C-c ^ - sort same level entries
*** C-c @ - mark subtree
*** C-c * - toggle heading (turn regular line into heading)
*** C-x C-c a - toggle archive heading
*** C-x C-x d - insert drawer (collapsed block)
** Navigation
*** C-', C-, - cycle org files
*** M-up, M-down - reorder item
*** C-c o - open link
*** C-c % - push current position to mark ring
*** C-c & - go to recorded position
** Display
*** C-x n s - narrow buffer to current subtree
*** C-x n w - turn off narrowing
*** S-<TAB> - toggle visibility for all items
** Clock
*** C-c C-x C-i - start clock on current item
*** C-c C-x C-o - stop clock time
*** C-c C-x C-x - reclock last clocked time
*** C-c C-x C-q - cancel current clock
*** C-c C-x C-j - jump to task of the current clock
*** C-c C-x C-d - display task clock summary
*** C-c C-x ; - start countdown timer
*** C-c C-x . - insert current timer string into buffer
*** C-c C-x - - insert description item to list bounded to timer position
*** C-c C-x , - toggle pause of timer
*** C-c C-x _ - stop the timer
** Agenda
*** I - clock in
*** L - recenter
*** / - secondary filtering
*** ; - start countdown timer
** Marks
*** S-left, S-right - mark cycle
*** M-h - mark paragraph
*** C-x h - mark entire buffer

** Priorities
*** C-c , - set priority
*** S-up - priority up
*** S-down - priority down
*** sorting
*** M-<up> - record line up
*** M-<down> - record line down

** Recovery
*** C-x u - undo
*** C-f C-g C-x - redo
*** M-x recovery-session - recovery files lost after system crash
** Dired
*** ! - run shell command
*** & - run async shell command
*** + - create directory
*** = - diff
*** g - refresh
*** a - reuse existing buffer if exists
*** o - open file/directory in other window (not override Dired buffer)
*** f - find file
*** t - toggle marks
*** u - unmark item
*** m - mark item
*** C-M-u or ^ - navigate directory up
*** C-J - jump to Dired mode from minibuffer
** Programming
*** C-x C-; - comment current line
** Folding
*** TAB - toggle fold heading
*** S-<TAB> - toggle fold all

** Links
 http://[[blog.aaronbieber.com]]
 http://whattheemacsd.com
 http://emacsrocks.com
 https://orgmode.org/worg/org-tutorials/org4beginners.html
 https://sachachua.com
* VIM
** edit
*** ]p - paste and indnet block
*** /** - mark entire buffer content
** navigation
*** [ or ] - go to next/previous function definition
*** ( or ) - go to next/previous paragraph
*** ]] - section forward or to next paragraph
*** gf - goto filename below the cursor
*** w - jump forward beginning of next word
*** W - jump forward beginning of next WORD
*** e - jump forward to end of word
*** E - jump forward to end of WORD
*** {} - jump back/forward to end/start of blocks
*** [] - jump to the start of next/previous block
*** g; - go to previous change I made
*** g, - go to next change I made
*** C-o - jump to previously visited location
*** C-i - jump to next visited location
*** hjkl - left/down/up/right
*** ciw, ciW - change word/WORD under the cursor
*** diw, diW - delete word/WORD under the cursor
*** ci( - change content inside ()
*** ci" - change content inside ""
*** mM - creates global mark
*** mm - creates local mark
*** f - move to next occurrence of the char (;, to go next/back)
***
** help
*** K - open help for word under the cursor
*** :h index - index of keys
** spellcheck
*** <leader>s - toggle spellcheck
*** ]s [s - navigation
*** z= - fix
*** zg - add
** substitution
*** %s - entire file
*** s - current line
*** ‚Äò<,‚Äô>s - visual selection
*** .,$s - from the current line to end of the file
*** .,+2s - from the current line and next 2 lines
*** g///g - entire file
*** // - last search pattern
** bookmarks
*** marks - shows list of bookmarks
*** '] - go to start of last change
** aligments
*** = - align selected text
** futivive - git
*** - - add to index
*** p - patch
** window & tabs
*** C-w | - maximize horizontal split
*** C-w | - maximize vertical split
*** C-w n - new horizontal split
*** C-w v - new vertical split
*** C-w c - close window
*** C-w o - close all living only current window
*** C-w T - open move window to new tab
*** C-w z - close preview window
** Ctrlp
*** C-x - open file from the list in new horizontal split
*** C-t -  open file from the list in new tab
*** { } - jump to next/previous empty line
** tags
*** tn - next function definition
*** C-w C-] - open definition in horizontal split
** netrw
*** % - create new file
*** D - delete file under the cursor
*** o/O - open file under the cursor in new window
*** i - cycle between: thin, long, wide, tree view
*** c - make the browsing directory current directory
*** gh - toggle hidden files
*** gn - change root directory for the directory below cursor (one level only)
*** mc - copy files to directory (requires mt first)
*** mf - toggle mark file
*** mg - vimgrep for marked files
*** md - apply diff to marked files (up to 3)
*** mm - move marked files to market directory
*** mr - mark files using regexp
*** mu - unmark all
*** mv - apply vim command to marked files
*** mx - apply shell command to marked files
*** P - open file and focus on it
*** qb - list bookmarked directories
*** qf - display file info
*** qF - mark files using quickfix list
*** qL - mark files using location list
*** r - reverse sorting order
*** R - rename file or directory
*** s - select sorting style
*** t - enter a file/dir name into tab
*** u/U/- - go to recently visited directory
*** x - view file in associated program
*** X - execute file under cursor by system
*** c-l - refresh directory listing

* Docker
** docker-machine start
* iTerm2
** options + mouse selection - select text to copy
** options + command + mouse selection - select block to copy
* eCommerce
* Tmux - https://gist.github.com/henrik/1967800
** console
*** [  ] - scroll
*** / - search down
*** shift-/ - search up
** sessions
*** $ - rename
*** C-r - restore sessions state
*** C-r - save sessions state
** windows
*** c - new
*** , - rename
*** n - change to next
*** p - change to previous
*** w - choose interactively
** panes
*** x - kill current
*** z - toggle zoom on current
*** { } - swapping
*** space - toggle horizontal - vertical
** client
*** d - detach current
*** $ - rename current client session
*** R - source .tmux.conf
*** ~ - display previous tmux message
*** [  - enter "copy mode"
** commands
*** swap-window -t 1 - swaps window 1 which top window

* Emacs VIM switch
** navigation
*** [#A] navigation by tags
*** TODO [#B] Emacs navigation by files in path
*** TODO [#B] go to accordance * and #
*** TODO [#B] search for phrase in root folder
** snippets
*** [#B] class, less, cl
** templates
*** [#C] new HTML doc from template
** git
*** [#B] diff file from revision
** folding
** auto completion
*** [#B] auto completion tags
*** [#A] auto completion files in path
*** [#A] auto completion opened buffers
*** [#B] auto completion syntax
**  file types support
*** [#B] file type support CSS, SCSS
*** [#D] file type support md
** display
*** [#C] color column limit
*** [#B] status line display folder name
** [#B] Emmet support
** [#B] support prettier or eslint
** [#B] code coverage: nyc, istanbul
** edit
*** [#B] master use multi cursors
*** [#B] Surround region
*** [#A] Upper case / lower case
** spell check
